pipeline {
    agent any

    environment {
        OS_SSH_KEY = credentials('GIT_SSH_CREDS')
        REPO_URL = 'git@git.cardiff.ac.uk:c23051986/teamatramshedtech.git'
        PROJECT_DIR = 'eventmanagement'
    }

    stages {
        stage('Get instance IP') {
            steps {
                script {
                    echo 'Attempting to copy artifacts from InfraCreation job...'
                    // Copy the instance_ip.txt file from the previous job
                    copyArtifacts(
                            projectName: 'TramshedTechProject_InfraCreation',
                            filter: 'instance_ip.txt',
                            target: 'artifacts',
                            selector: lastSuccessful()
                    )
                    echo 'Artifacts copied. Reading instance IP...'
                    env.INSTANCE_IP = readFile('artifacts/instance_ip.txt').trim()
                    sh 'echo "Instance IP: $INSTANCE_IP"'
                }
            }
        }
        stage('Clone Project ') {
            steps {
                script {
                    // Clone commands
                    sshagent(['GIT_SSH_CREDS']) {
                        // Remove existing directory if it exists
                        sh '''
                        if [ -d "teamatramshedtech" ]; then
                        rm -rf teamatramshedtech
                        fi
                        '''

                    // Clone the repository
                        sh '''
                        git clone git@git.cardiff.ac.uk:c23051986/teamatramshedtech.git
                        cd eventmanagement
                        '''
                    }
                    sh 'echo "Clone Repo"'
                }
            }
        }
        stage('Build') {
           steps {
               script {
                   // Build commands
                   sh '''
                   cd eventmanagement
                   chmod +x gradlew
                   ./gradlew build
                   '''
                   sh 'echo "Build Project"'
                }
            }
        }
        stage('Test') {
           steps {
               script {
                   // Test commands
                   sh '''
                   cd eventmanagement
                   ./gradlew test
                    '''
                    sh 'echo "Test Project"'
                }
            }
        }
        stage('Run Project') {
            steps {
                script {
                    // Run project in the background
                    sh '''
                    cd eventmanagement
                    nohup java -jar build/libs/eventmanagement-0.0.1-SNAPSHOT.jar > app.log 2>&1 &
                    echo $! > app.pid
                    '''
                    sh 'echo "Application started in the background."'
                }
            }
        }
    }
}